{"remainingRequest":"/Users/gaurangimane/vue-typescript/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gaurangimane/vue-typescript/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gaurangimane/vue-typescript/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gaurangimane/vue-typescript/src/views/Photos.vue?vue&type=template&id=001472bb&scoped=true&","dependencies":[{"path":"/Users/gaurangimane/vue-typescript/src/views/Photos.vue","mtime":1604054249454},{"path":"/Users/gaurangimane/vue-typescript/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gaurangimane/vue-typescript/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/gaurangimane/vue-typescript/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gaurangimane/vue-typescript/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}